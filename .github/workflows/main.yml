name: 'main'

on:
  push:
  pull_request:

jobs:

  build-binaries:
    runs-on: ubuntu-latest
    env:
      CC: gcc-9
      CXX: g++-9

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
         python-version: '3.x'

    - name: Build binaries
      run: |
        make -j$(nproc) prep
        mkdir -p output
        mv image output/

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: output


  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
           python-version: '3.x'

      - name: Generate matrix
        id: generate
        run: |
          matrix="$(python list.py -d tests -s ibex yosys synthesis)"
          echo "::set-output name=matrix::$matrix"
          echo "Matrix: $matrix"

  tests:
    runs-on: ubuntu-latest
    needs: [build-binaries, generate-matrix]
    strategy:
      matrix:
        TEST_CASE: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
        TARGET:
          - uhdm/yosys/test-ast
          - uhdm/verilator/test-ast
      fail-fast:
        false
    env:
      CC: gcc-9
      CXX: g++-9

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
         python-version: '3.x'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    - name: Update binaries timestamp
      run: |
        find image -type f -exec touch {} +

    - name: Build & Test
      run: ./.github/ci.sh
      env:
        TEST_CASE: ${{ matrix.TEST_CASE }}
        TARGET: ${{ matrix.TARGET }}


  surelog-uhdm:
    runs-on: ubuntu-latest
    needs: build-binaries
    env:
      CC: gcc-9
      CXX: g++-9

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
         python-version: '3.x'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    - name: Update binaries timestamp
      run: |
        find image -type f -exec touch {} +

    - name: Build & Test
      run: ./.github/ci.sh
      env:
        MODE: surelog-uhdm


  ibex_synth:
    runs-on: ubuntu-latest
    needs: build-binaries
    strategy:
      matrix:
        TARGET: [uhdm/yosys/synth-ibex]
      fail-fast:
        false
    env:
      CC: gcc-9
      CXX: g++-9

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
         python-version: '3.7'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    - name: Update binaries timestamp
      run: |
        find image -type f -exec touch {} +

    - name: Print image files
      run: |
        ls -la .
        ls -la image
        ls -la image/bin

    - name: Build & Test
      run: |
        pip install virtualenv
        virtualenv venv-ibex
        . venv-ibex/bin/activate
        pip install -r tests/ibex/ibex/python-requirements.txt
        cd tests/ibex/ibex
        fusesoc --cores-root=. run --target=synth --setup lowrisc:ibex:top_artya7 --part xc7a35ticsg324-1L
        cd ../../..
        ./.github/ci.sh
      env:
        TARGET: uhdm/yosys/synth-ibex
        TEST_CASE: tests/ibex

    - uses: actions/upload-artifact@v2
      with:
        name: top_artya7.edif
        path: build/top_artya7.edif
