name: 'main'

on:
  push:
  pull_request:

jobs:

  build-binaries:
    runs-on: ubuntu-latest
    env:
      CC: gcc-9
      CXX: g++-9

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
         python-version: '3.x'

    - name: Build binaries
      run: |
        make -j$(nproc) prep

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: image

  tests:
    runs-on: ubuntu-latest
    needs: build-binaries
    strategy:
      matrix:
        TEST_CASE:
          - onenet
          - OneNetModport
          - OneFF
          - OneAnd
          - OneDivider
          - OneNetInterf
          - OneNetRange
          - OneConcat
          - OneReplicate
          - OneAlwaysComb
          - OneShift
          - OneArithShift
          - OneSysFunc
          - OneInside
          - OneImport
          - OneCast
          - OnePackage
          - OneStruct
          - fsm_single_always
          - fsm_using_function
          - fsm_using_always
          - AluOps
          - UnitForLoop
          - GenerateAssigns
          - AssignmentPattern
          - MixedPatterns
          - MultipleCells
          - MultipleNets
          - MultiplePrints
          - IndexedPartSelect
          - PartSelect
          - VarSelect
          - EnumInPackage
          - StructInPackage
        TARGET:
          - uhdm/yosys/test-ast
          - uhdm/verilator/test-ast
        exclude:
          - TEST_CASE: OneThis
            TARGET: uhdm/verilator/test-ast
      fail-fast:
        false
    env:
      CC: gcc-9
      CXX: g++-9

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
         python-version: '3.x'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    - name: Build & Test
      run: ./.github/ci.sh
      env:
        TEST_CASE: tests/${{ matrix.TEST_CASE }}
        TARGET: ${{ matrix.TARGET }}


  surelog-uhdm:
    runs-on: ubuntu-latest
    needs: build-binaries
    env:
      CC: gcc-9
      CXX: g++-9

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
         python-version: '3.x'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    - name: Build & Test
      run: ./.github/ci.sh
      env:
        MODE: surelog-uhdm


  ibex_synth:
    runs-on: ubuntu-latest
    needs: build-binaries
    strategy:
      matrix:
        TARGET: [uhdm/yosys/synth-ibex]
      fail-fast:
        false
    env:
      CC: gcc-9
      CXX: g++-9

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install -y g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
         python-version: '3.7'

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries

    - name: Build & Test
      run: |
        pip install virtualenv
        virtualenv venv-ibex
        . venv-ibex/bin/activate
        pip install -r tests/ibex/ibex/python-requirements.txt
        cd tests/ibex/ibex
        fusesoc --cores-root=. run --target=synth --setup lowrisc:ibex:top_artya7 --part xc7a35ticsg324-1L
        cd ../../..
        ./.github/ci.sh
      env:
        TARGET: uhdm/yosys/synth-ibex
        TEST_CASE: tests/ibex

    - uses: actions/upload-artifact@v2
      with:
        name: top_artya7.edif
        path: build/top_artya7.edif
